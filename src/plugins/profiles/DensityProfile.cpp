//
// Created by Kruegener on 8/19/2018.
// Ported from Domain.cpp by Mheier.
//

#include "DensityProfile.h"

void DensityProfile::output(std::string prefix, long unsigned accumulatedDatasets) {
	Log::global_log->info() << "[DensityProfile] output" << std::endl;

	// Setup outfile
	_accumulatedDatasets = accumulatedDatasets;
	_profilePrefix = prefix + ".NDpr";
	std::ofstream outfile(_profilePrefix.c_str());
	outfile.precision(6);

	// Write Header
	outfile << "//Segment volume: " << _samplInfo.segmentVolume << "\n//Accumulated data sets: " << _accumulatedDatasets
			<< "\n//Local profile of the number density. Output file generated by the \"DensityProfile\" method, plugins/profiles. \n";
	outfile << "//local density profile: Y - Z || X-projection\n";
	//outfile << "//one single matrix of the local number density rho'(phi_i;r_i',h_i') \n//       | r_i'\n// ---------------------\n//   h_i'| rho'(r_i',h_i')\n//       | \n";
	//outfile << "//  T' \t sigma_ii' \t eps_ii' \t yOffset \t DELTA_phi \t DELTA_r2' \t DELTA_h' \t quantities in atomic units are denoted by an apostrophe '\n";
	//outfile << _kartProf->dom->getTargetTemperature(0)<<"\t"<<_kartProf->dom->getSigma(0, 0)<<"\t"<<_kartProf->dom->getepsilonRF()<<"\t"; //changed by Michaela Heier
	outfile << "// \t dX \t dY \t dZ \n";
	outfile << "\t" << 1 / _samplInfo.universalInvProfileUnit[0] << "\t" << 1 / _samplInfo.universalInvProfileUnit[1]
			<< "\t" << 1 / _samplInfo.universalInvProfileUnit[2] << "\n";
	outfile << "0 \t";

	// Invoke matrix write routine
	writeMatrix(outfile);

	outfile.close();
}

void DensityProfile::writeDataEntry (unsigned long uID, std::ofstream& outfile) const {
	outfile << (double) this->_globalProfile.at(uID) / (_samplInfo.segmentVolume * _accumulatedDatasets) << "\t";
}
