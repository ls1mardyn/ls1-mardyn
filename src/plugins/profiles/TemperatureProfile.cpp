//
// Created by Kruegener on 10/22/2018.
//

#include "TemperatureProfile.h"
#include "DOFProfile.h"
#include "KineticProfile.h"


void TemperatureProfile::output(std::string prefix, long unsigned accumulatedDatasets) {

    Log::global_log->info() << "[TemperatureProfile] output" << std::endl;

    // Generate Outfile
    _accumulatedDatasets = accumulatedDatasets;
    _profilePrefix = prefix + ".Temppr";
    std::ofstream outfile(_profilePrefix.c_str());
    outfile.precision(6);

    // Write Header
    outfile << "//Segment volume: " << _samplInfo.segmentVolume << "\n//Accumulated data sets: " << _accumulatedDatasets << "\n//Local profile of the temperature. Output file generated by the \"TemperatureProfile\" method, plugins/profiles. \n";
    outfile << "//Temperature expressed by 2Ekin/#DOF\n";
    outfile << "//local temperature profile: Y - Z || X-projection\n";
    outfile << "// \t dX \t dY \t dZ \n";
    outfile << "\t" << 1/_samplInfo.universalInvProfileUnit[0] << "\t" << 1/_samplInfo.universalInvProfileUnit[1] << "\t" << 1/_samplInfo.universalInvProfileUnit[2]<< "\n";
    outfile << "0 \t";

    // Invoke matrix write routine
    writeMatrix(outfile);

    outfile.close();
}

void TemperatureProfile::writeDataEntry(unsigned long uID, std::ofstream &outfile) const {
    int dofs = _dofProfile->getGlobalDOF(uID);
    if(dofs == 0){
        outfile << 0.0 << "\t";
    }
    else{
        outfile << (_kineticProfile->getGlobalKineticEnergy(uID) / dofs) << "\t";
    }
}
